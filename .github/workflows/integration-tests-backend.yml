name: Integration Tests Backend

on:
  workflow_call:
    inputs:
      target_branch:
        required: true
        type: string
      build_branch:
        required: true
        type: string
        
env:
  TARGET_BRANCH: ${{ inputs.target_branch }}

jobs:
  integration_tests_backend:
    name: Backend API integration tests
    runs-on: ubuntu-20.04
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.build_branch }}

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.22.5

      - name: Cache Go deps
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download go binary
        uses: actions/download-artifact@v3
        with:
          name: kiali
          path: ~/go/bin/

      - name: Ensure kiali binary is executable
        run: chmod +x ~/go/bin/kiali

      - name: Download frontend build
        uses: actions/download-artifact@v3
        with:
          name: build
          path: frontend/build

      - name: Setup kind
        run: hack/setup-kind-in-ci.sh

      - name: Install demo apps
        run: hack/istio/install-testing-demos.sh -c "kubectl"

      - name: Set kiali URL
        run: |
          KIALI_URL="http://$(kubectl get svc -l app.kubernetes.io/name=kiali -n istio-system -o=jsonpath='{.items[0].status.loadBalancer.ingress[0].ip}'):20001/kiali"
          echo "::set-output name=kiali_url::$KIALI_URL"
        id: set-kiali-url

      - name: Run backend integration tests
        run: go test -v
        env:
          URL: ${{ steps.set-kiali-url.outputs.kiali_url }}
        working-directory: tests/integration/tests

      - name: Get debug info when integration tests fail
        if: failure()
        run: |
          kubectl logs -l app.kubernetes.io/name=kiali -n istio-system
          kubectl describe nodes
          kubectl get pods -l app.kubernetes.io/name=kiali -n istio-system -o yaml
